{"version":3,"sources":["../../src/components/PanZoomDemo.jsx"],"names":["React","ReactSVGPanZoom","bindActionCreators","connect","actions","PanZoomDemo","Component","constructor","props","context","Viewer","componentDidMount","fitToViewer","render","counter","data","clickCounter","sampleAction","zoomIn","zoomOnViewerCenter","zoomArea","fitSelection","onClick","event","console","log","x","y","originalEvent","onMouseMove","outline","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,eAAT,QAAgC,oBAAhC;;AAEA,SAASC,kBAAT,QAAmC,OAAnC;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,OAAO,KAAKC,OAAZ,MAAyB,yBAAzB;;AAEA,MAAMC,WAAN,SAA0BL,MAAMM,SAAhC,CAA0C;AACxCC,cAAYC,KAAZ,EAAmBC,OAAnB,EAA4B;AAC1B,UAAMD,KAAN,EAAaC,OAAb;AACA,SAAKC,MAAL,GAAc,IAAd;AACD;AACDC,sBAAoB;AAClB,SAAKD,MAAL,CAAYE,WAAZ;AACD;AACDC,WAAS;AACP,UAAM,EAAEC,OAAF,KAAc,KAAKN,KAAL,CAAWO,IAA/B;AACA,UAAMC,eAAe,MAAM,KAAKR,KAAL,CAAWJ,OAAX,CAAmBa,YAAnB,EAA3B;;AAEA,UAAMC,SAAS,MAAC,WAAgB,KAAKR,MAAL,CAAYS,kBAAZ,CAA+B,GAA/B,CAAhC;AACA,UAAMC,WAAW,MAAC,WAAgB,KAAKV,MAAL,CAAYW,YAAZ,CAAyB,EAAzB,EAA6B,EAA7B,EAAiC,GAAjC,EAAsC,GAAtC,CAAlC;AACA,UAAMT,cAAc,MAAC,WAAgB,KAAKF,MAAL,CAAYE,WAAZ,EAArC;;AAEA,UAAMU,UAAUC,SAASC,QAAQC,GAAR,CAAY,OAAZ,EAAqBF,MAAMG,CAA3B,EAA8BH,MAAMI,CAApC,EAAuCJ,MAAMK,aAA7C,CAAzB;AACA,UAAMC,cAAcN,SAASC,QAAQC,GAAR,CAAY,MAAZ,EAAoBF,MAAMG,CAA1B,EAA6BH,MAAMI,CAAnC,CAA7B;;AAEA,WACE;AAAA;AAAA;AAEE;AAAA;AAAA,UAAQ,SAASX,YAAjB;AAAA;AAAwCF;AAAxC,OAFF;AAGE,qCAHF;AAKE;AAAA;AAAA,UAAQ,SAASI,MAAjB;AAAA;AAAA,OALF;AAME;AAAA;AAAA,UAAQ,SAASE,QAAjB;AAAA;AAAA,OANF;AAOE;AAAA;AAAA,UAAQ,SAASR,WAAjB;AAAA;AAAA,OAPF;AASE,qCATF;AAWE;AAAC,uBAAD;AAAA;AACE,eAAKF,UAAW,KAAKA,MAAL,GAAcA,MADhC;AAEE,iBAAO,EAAEoB,SAAS,iBAAX,EAFT;AAGE,iBAAO,GAHT,EAGc,QAAQ,GAHtB;AAIE,mBAASR,OAJX;AAKE,uBAAaO;AALf;AAOE;AAAA;AAAA,YAAK,OAAO,GAAZ,EAAiB,QAAQ,GAAzB;AAEE,0CAAQ,IAAG,IAAX,EAAgB,IAAG,IAAnB,EAAwB,GAAE,IAA1B,EAA+B,QAAO,OAAtC,EAA8C,aAAY,GAA1D,EAA8D,MAAK,QAAnE;AAFF;AAPF;AAXF,KADF;AA0BD;AA7CuC;;AAiD1C;AACA,SAASE,eAAT,CAAyBC,KAAzB,EAAgC;AAC9B,SAAO;AACLjB,UAAMiB,MAAMjB;AADP,GAAP;AAGD;;AAED;AACA,SAASkB,kBAAT,CAA4BC,QAA5B,EAAsC;AACpC,SAAO;AACL9B,aAASF,gCAAwBE,OAAxB,GAAmC8B,QAAnC;AADJ,GAAP;AAGD;;AAED,eAAe/B,QACb4B,eADa,EAEbE,kBAFa,EAGb5B,WAHa,CAAf","file":"PanZoomDemo.js","sourcesContent":["import React from 'react';\r\nimport { ReactSVGPanZoom } from 'react-svg-pan-zoom';\r\n\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\n\r\nimport * as actions from '../redux/common/actions';\r\n\r\nclass PanZoomDemo extends React.Component {\r\n  constructor(props, context) {\r\n    super(props, context);\r\n    this.Viewer = null;\r\n  }\r\n  componentDidMount() {\r\n    this.Viewer.fitToViewer();\r\n  }\r\n  render() {\r\n    const { counter } = this.props.data;\r\n    const clickCounter = () => this.props.actions.sampleAction();\r\n\r\n    const zoomIn = (/* event */) => this.Viewer.zoomOnViewerCenter(1.1);\r\n    const zoomArea = (/* event */) => this.Viewer.fitSelection(40, 40, 200, 200);\r\n    const fitToViewer = (/* event */) => this.Viewer.fitToViewer();\r\n\r\n    const onClick = event => console.log('click', event.x, event.y, event.originalEvent);\r\n    const onMouseMove = event => console.log('move', event.x, event.y);\r\n\r\n    return (\r\n      <div>\r\n\r\n        <button onClick={clickCounter}>Clicks: {counter}</button>\r\n        <hr />\r\n\r\n        <button onClick={zoomIn}>Zoom in</button>\r\n        <button onClick={zoomArea}>Zoom area</button>\r\n        <button onClick={fitToViewer}>Fit</button>\r\n\r\n        <hr />\r\n\r\n        <ReactSVGPanZoom\r\n          ref={Viewer => (this.Viewer = Viewer)}\r\n          style={{ outline: '1px solid black' }}\r\n          width={500} height={500}\r\n          onClick={onClick}\r\n          onMouseMove={onMouseMove}\r\n        >\r\n          <svg width={100} height={100}>\r\n            {/* SVG Contents */}\r\n            <circle cx=\"50\" cy=\"50\" r=\"40\" stroke=\"green\" strokeWidth=\"4\" fill=\"yellow\" />\r\n          </svg>\r\n        </ReactSVGPanZoom>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n/* istanbul ignore next */\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    data: state.data,\r\n  };\r\n}\r\n\r\n/* istanbul ignore next */\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    actions: bindActionCreators({ ...actions }, dispatch),\r\n  };\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n)(PanZoomDemo);\r\n"]}