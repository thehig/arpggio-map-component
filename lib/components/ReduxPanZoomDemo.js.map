{"version":3,"sources":["../../src/components/ReduxPanZoomDemo.jsx"],"names":["React","ReactSVGPanZoom","bindActionCreators","connect","actionsSource","ReduxPanZoomDemo","Component","render","state","actions","props","viewerValue","get","toJS","viewerTool","margin","zoomOnViewerCenter","fitToViewer","panViewer","selectToolNone","selectToolPan","selectToolZoomIn","selectToolZoomOut","value","setViewerValue","tool","selectTool","outline","mapStateToProps","data","mapDispatchToProps","dispatch"],"mappings":"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","file":"ReduxPanZoomDemo.js","sourcesContent":["import React from 'react';\r\n// import PropTypes from 'prop-types';\r\nimport { ReactSVGPanZoom } from 'react-svg-pan-zoom';\r\n\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport * as actionsSource from '../redux/common/actions';\r\n\r\n\r\nclass ReduxPanZoomDemo extends React.Component {\r\n  // static propTypes = {\r\n  //   state: PropTypes.object.isRequired,\r\n  //   actions: PropTypes.object.isRequired,\r\n  // };\r\n\r\n  render() {\r\n    const { state, actions } = this.props;\r\n    const viewerValue = state.get('viewerValue') ? state.get('viewerValue').toJS() : null;\r\n    const viewerTool = state.get('viewerTool');\r\n\r\n    return (\r\n      <div style={{ margin: '20px' }}>\r\n        <button onClick={(/* event */) => actions.zoomOnViewerCenter(1.1)}>Zoom in</button>\r\n        <button onClick={(/* event */) => actions.zoomOnViewerCenter(0.9)}>Zoom out</button>\r\n        <button onClick={(/* event */) => actions.fitToViewer()}>Fit to viewer</button>\r\n        <br />\r\n        <button onClick={(/* event */) => actions.panViewer(0, -20)}>Up</button>\r\n        <button onClick={(/* event */) => actions.panViewer(20, 0)}>Right</button>\r\n        <button onClick={(/* event */) => actions.panViewer(0, 20)}>Down</button>\r\n        <button onClick={(/* event */) => actions.panViewer(-20, 0)}>Left</button>\r\n        <br />\r\n        <button onClick={(/* event */) => actions.selectToolNone()}>Select tool none</button>\r\n        <button onClick={(/* event */) => actions.selectToolPan()}>Select tool pan</button>\r\n        <button onClick={(/* event */) => actions.selectToolZoomIn()}>Select tool zoom in</button>\r\n        <button onClick={(/* event */) => actions.selectToolZoomOut()}>Select tool zoom out</button>\r\n        <br />\r\n\r\n        <ReactSVGPanZoom\r\n          width={500} height={500}\r\n          value={viewerValue} onChangeValue={value => actions.setViewerValue(value)}\r\n          tool={viewerTool} onChangeTool={tool => actions.selectTool(tool)}\r\n          style={{ outline: '1px solid black' }}\r\n        >\r\n\r\n          <svg width={800} height={800}>\r\n            <rect x=\"400\" y=\"40\" width=\"100\" height=\"200\" fill=\"#4286f4\" stroke=\"#f4f142\" />\r\n            <circle cx=\"108\" cy=\"108.5\" r=\"100\" fill=\"#0ff\" stroke=\"#0ff\" />\r\n            <circle cx=\"180\" cy=\"209.5\" r=\"100\" fill=\"#ff0\" stroke=\"#ff0\" />\r\n            <circle cx=\"220\" cy=\"109.5\" r=\"100\" fill=\"#f0f\" stroke=\"#f0f\" />\r\n          </svg>\r\n\r\n        </ReactSVGPanZoom>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n/* istanbul ignore next */\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    state: state.data,\r\n  };\r\n}\r\n\r\n/* istanbul ignore next */\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    actions: bindActionCreators({ ...actionsSource }, dispatch),\r\n  };\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n)(ReduxPanZoomDemo);\r\n"]}